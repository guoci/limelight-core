<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." name="Limelight build_War_CopyToTomcat" default="built-copy-war">

	<!--  Build the 'War' and copy to a Tomcat Deploy  -->
	
	<!--
	<property environment="env" />
	<property name="gradle.wrapper.executable" location="${env.GRADLE_HOME}/bin/gradle" />
	
	<echo>env:${env}</echo>
	<echo>env.GRADLE_HOME:${env.GRADLE_HOME}</echo>
	-->
	
	<property name="war_filename" value="limelight.war" />
	
	<property name="config_file" value="ant_buildFrontEnd_CopyToTomcat.settings.properties" />
	
	<property name="config_file_with_path" 
		value="front_end${file.separator}${config_file}"/>

	<echo>Using Config file ${config_file_with_path}</echo>
	
	<fail message="ERROR: '${config_file}' file not found, check the path. filename with path: ${config_file_with_path}">
		<condition>
		    <not>
		    	<available file="${config_file_with_path}" />
		    </not>
		</condition>
	</fail>
	
	<echo>config_file_with_path: ${config_file_with_path}</echo>
	
	<!-- This does not fail if the file is not found -->
	<property file="${config_file_with_path}" />
	
	<echo>gradle.wrapper.executable: ${gradle.wrapper.executable}</echo>
	
	<echo>tomcat.webapps.root: ${tomcat.webapps.root}</echo>
	<echo>limelight.context: ${limelight.context}</echo>

	<target name="built-copy-war" description="">
		
		<exec executable="${gradle.wrapper.executable}" dir="." failonerror="true" >
			<arg value="build" />
			<!--   <arg value="XXXX" /> -->
		</exec>
		
		<copy file="build${file.separator}libs${file.separator}${war_filename}"
				todir="${tomcat.webapps.root}" >
		</copy>			 

	</target>

</project>
